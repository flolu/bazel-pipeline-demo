load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit")

load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar", "pkg_deb")

# TODO remove : debug
sh_binary(
    name = "dev",
    srcs = ["run.sh"],
)

pkg_tar(
    name = "bin",
    strip_prefix = ".", # Use for avoid to strip all prefix.
    srcs = glob([
            "components/**/*",
            "pages/**/*",
            "public/**/*",
            "styles/**/*",
        ]) + [
            "package.json",
            "package-lock.json",
            ".env.local", # Replace env file by generated one with k8s value.
        ],
    mode = "0755",
)

container_image(
    name = "pre_data_image",
    base = "@node//image",
    directory = "/home/node",
    files = [ ":bin.tar" ],
)

container_run_and_commit(
    name = "data_image",
    commands = [
        "cd /home/node",
        "tar -xvf bin.tar",
        "rm bin.tar",
        "chown -R node:node .",
        "chmod +w -R .",
    ],
    image = ":pre_data_image.tar",
)

container_image(
    name = "pre_build_image",
    base = ":data_image",
)

container_run_and_commit(
    name = "build_image",
    commands = [
        "cd ~",
        "npm install --no-save",
        "npm run build"
    ],
    docker_run_flags = [
        "-u",
        "node",
    ],
    image = ":pre_build_image.tar",
)

container_image(
    name = "image",
    base = ":build_image",
    cmd = ["run","start"],
    entrypoint = ["npm"],
    user = "node",
    workdir = "/home/node",
    legacy_run_behavior = False,
)


load("@io_bazel_rules_k8s//k8s:object.bzl", "k8s_object")

k8s_object(
    name = "deployment",
    cluster = "minikube",
    images = {
        "docker.local:5000/pipline-demo/web:dev": "//web:image",
    },
    kind = "Deployment",
    template = "deployment.yaml",
)

load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

k8s_objects(
    name = "app",
    objects = [
        ":deployment",
    ],
    visibility = ["//visibility:public"],
)
